Что использовалось:
    PostgreSQL 14.1 
    Python 3.8
    StarUML

Какая OC использовалась:
    Mac OS 10.14.6

Папка UML:
    В папке располагаются диаграммы (диаграмма компонентов, диаграмма последовательности) 
    в трех форматах (.jpeg, .png, .svg).
    Также в папке находится файл с расширением .mdj (оригинальный файл, где все диаграммы были спроектированы)

Папка Program:
    В папке находятся две папки: webserver, dbserver 

    Папка webserver:
        -Dockerfile (Докер файл контейнера веб сервера)
        -main.py (Программа, имитирующая работу веб сервера)
        -setup_webserver.sh (Установочный файл, для контейнера/OS, где будет запускаться программа)
        -envlist_webserver.txt (Файл с переменными окружения для контейнера/OS, где будет запускаться программа)
        -requirements.txt (Необходимые библиотеки для работы программы)
     Папка dbserver:
        -Dockerfile (Докер файл контейнера базы данных)
        -dbserver.sql (SQL файл для настройки базы данных)
        -envlist_dbserver.txt (Файл с переменными окружения для контейнера базы данных)

    Программа обрабатывает числа, переданные с помощью соманды curl.
    Отправляется число больше или равное 0 в формате json.
    Пример: curl -d '{"num": 0}' http://localhost:2000
    В зависимости от числа программа выдаст либо ошибку, либо обработанное число.
    В случае ошибки сервер не запишет число в базу.
