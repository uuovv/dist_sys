Что использовалось:
    PostgreSQL 14.1 
    Python 3.8
    StarUML

Какая OC использовалась:
    Mac OS 10.14.6

Папка UML:
    В папке располагаются диаграммы (диаграмма компонентов, диаграмма последовательности) 
    в трех форматах (.jpeg, .png, .svg).
    Также в папке находится файл с расширением .mdj (оригинальный файл, где все диаграммы были спроектированы)

Папка Program:
    В папке написана программа, которая имитирует работу сервера.
    Для запуска программы была создан файл requirements-dev.txt, где описаны необходимые библиотеки,
    с помощью которых можно создать виртуальную среду.

    Создание виртуальной среды: python3 -m venv venv
    Активация виртуальной среды: source ./venv/bin/activate
    Скачивание библиотек (нужно предварительно активировать виртуальную среду): pip install -r requirements-dev.txt
    Деактивация среды: deactivate

    Работа программы:
    1)Запускается сервер с базами данных (PostgreSQL)
    2)Запускается сервер: python3 main.py
    3)С помощью команды curl отправляется число больше или равное 0 в формате json:
    Пример: curl -d '{"num": 0}' -X POST http://localhost:2000        
    4)В зависимости от числа программа выдаст либо ошибку, либо обработанное число
    - в случае ошибки сервер не запишет число в базу

